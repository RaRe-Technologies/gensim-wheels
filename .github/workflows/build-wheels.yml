name: Build wheels

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 0 * * 0,3' # 2/weekly

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: [ubuntu-latest, macos-latest]
        platform: [x64]
        PLAT: [i686, x86_64]
        exclude:
          - os: macos-latest # macos-10.15
            PLAT: i686
    env:
      REPO_DIR: gensim
      PKG_NAME: gensim
      BUILD_COMMIT: 4.0.0beta
      UNICODE_WIDTH: 32
      MB_PYTHON_VERSION: ${{ matrix.python-version }}
      TRAVIS_PYTHON_VERSION: ${{ matrix.python-version }}
      TRAVIS_BRANCH: ${{ github.head_ref }}
      TRAVIS_PULL_REQUEST: ${{ github.event.number }}
      TRAVIS_BUILD_DIR: ${{ github.workspace }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Pin Morfessor, Levenshtein, visdom
      run: |
        echo "MF_TEST_DEP=$(echo Morfessor==2.0.2a4)" >> $GITHUB_ENV;
        echo "LV_TEST_DEP=$(echo python-levenshtein==0.12.0)" >> $GITHUB_ENV;
        echo "VD_TEST_DEP=$(echo visdom==0.1.8.9)" >> $GITHUB_ENV
    - name: Setup Environment variables
      run: |
        echo "Event type: ${{ github.event_name }}"
        if [ "schedule" == "${{ github.event_name }}" ]; then
          echo "TRAVIS_EVENT_TYPE=cron" >> $GITHUB_ENV;
          echo "BUILD_COMMIT=master" >> $GITHUB_ENV
        else
          echo "TRAVIS_EVENT_TYPE=${{ github.event_name }}" >> $GITHUB_ENV
          echo "BUILD_COMMIT=$BUILD_COMMIT" >> $GITHUB_ENV
        fi
        if [ "macos-latest" == "${{ matrix.os }}" ]; then
          echo "TRAVIS_OS_NAME=osx" >> $GITHUB_ENV
        else
          echo "TRAVIS_OS_NAME=${{ matrix.os }}" >> $GITHUB_ENV;
        fi
        echo "TEST_DEPENDS=$(echo $MF_TEST_DEP $LV_TEST_DEP $VD_TEST_DEP pytest mock cython nmslib pyemd testfixtures scikit-learn pyemd)" >> $GITHUB_ENV;
        echo "DOCKER_TEST_IMAGE=$(echo multibuild/xenial_${{ matrix.PLAT}})" >> $GITHUB_ENV;
    - name: Print some Environment variable
      run: |
        echo "TRAVIS_BRANCH: ${TRAVIS_BRANCH}"
        echo "TRAVIS_PULL_REQUEST: ${TRAVIS_PULL_REQUEST}"
        echo "TRAVIS_REPO_SLUG: ${TRAVIS_REPO_SLUG}"
        echo "TRAVIS_EVENT_TYPE: ${TRAVIS_EVENT_TYPE}"
        echo "TRAVIS_OS_NAME: ${TRAVIS_OS_NAME}"
        echo "PLAT: ${{ matrix.PLAT }}"
        echo "DOCKER_TEST_IMAGE: ${DOCKER_TEST_IMAGE}"
        echo "TEST_DEPENDS: ${TEST_DEPENDS}"
    - name: Install VirtualEnv
      run: |
        python -m pip install --upgrade pip
        pip install virtualenv
    - name: Build and Install Wheels
      run: |
        source multibuild/common_utils.sh
        source multibuild/travis_steps.sh
        echo "------ BEFORE INSTALL ---------"
        before_install
        echo "------ CLEAN CODE --------"
        clean_code $REPO_DIR $BUILD_COMMIT
        echo "------ BUILD WHEEL --------"
        build_wheel $REPO_DIR ${{ matrix.PLAT }}
        echo "------ INSTALL RUN --------"
        install_run ${{ matrix.PLAT }}
    - name: Upload wheels
      if: always()
      run: |
            pip install wheelhouse-uploader
            ls ${TRAVIS_BUILD_DIR}/wheelhouse/*.whl
            python -m wheelhouse_uploader upload --local-folder ${TRAVIS_BUILD_DIR}/wheelhouse/ --no-ssl-check gensim-wheels --provider S3 --no-enable-cdn
